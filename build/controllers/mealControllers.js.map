{"version":3,"sources":["../../server/src/controllers/mealControllers.js"],"names":["MealControllers","req","res","Meal","findAll","where","catererId","meals","status","json","message","data","body","name","price","image","files","imageUrl","create","meal","mv","findOne","id","params","Error","mealUpdate","fs","unlink","err","update","destroy"],"mappings":"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","sourcesContent":["import fs from \"fs\";\r\n//import Meal from \"../models/meals\";\r\n\r\nclass MealControllers {\r\n  static async getMeal(req, res) {\r\n    try {\r\n      const meals = await Meal.findAll({\r\n        where: { catererId: 2 }\r\n      });\r\n      return res.status(200).json({\r\n        status: \"success\",\r\n        message: \"Meals Retrieved\",\r\n        data: meals\r\n      });\r\n    } catch (err) {\r\n      return res.status(500).json({\r\n        status: \"error\",\r\n        message: \"Failed to Retrieve Meals\"\r\n      });\r\n    }\r\n  }\r\n\r\n  static async postMeal(req, res) {\r\n    try {\r\n      const { name, price } = req.body;\r\n      const { image } = req.files;\r\n      const imageUrl = `/src/images/${image.name}`;\r\n      const meal = await Meal.create({\r\n        name,\r\n        price,\r\n        imageUrl,\r\n        catererId: 2\r\n      });\r\n      await image.mv(`.${imageUrl}`);\r\n      return res.status(201).json({\r\n        status: \"success\",\r\n        message: \"Meal Option Added\",\r\n        data: meal\r\n      });\r\n    } catch (err) {\r\n      return res.status(500).json({\r\n        status: \"error\",\r\n        message: err.message\r\n      });\r\n    }\r\n  }\r\n\r\n  static async updateMealName(req, res) {\r\n    try {\r\n      const meal = await Meal.findOne({ where: { id: req.params.id } });\r\n      if (!meal) {\r\n        throw new Error(`Meal With ID ${req.params.id} does not exist`);\r\n      }\r\n      const mealUpdate = {\r\n        name: req.body.name ? req.body.name : meal.name,\r\n        price: req.body.price ? req.body.price : meal.price\r\n      };\r\n      if (req.files !== null) {\r\n        const { image } = req.files;\r\n        const imageUrl = `/src/images/${image.name}`;\r\n        fs.unlink(`.${meal.imageUrl}`, err => {\r\n          if (err) throw new Error(err.message);\r\n        });\r\n        mealUpdate.imageUrl = imageUrl;\r\n        await image.mv(`.${imageUrl}`);\r\n      } else {\r\n        mealUpdate.imageUrl = meal.imageUrl;\r\n      }\r\n      const { name, price, imageUrl } = mealUpdate;\r\n      await Meal.update(\r\n        { name, price, imageUrl },\r\n        { where: { id: req.params.id } }\r\n      );\r\n      return res.status(200).json({\r\n        status: \"success\",\r\n        message: \"Meal Option Updated\"\r\n      });\r\n    } catch (err) {\r\n      return res.status(500).json({\r\n        status: \"error\",\r\n        message: err.message\r\n      });\r\n    }\r\n  }\r\n\r\n  static async deleteMeal(req, res) {\r\n    try {\r\n      const { id } = req.params;\r\n      const meal = await Meal.findOne({ where: { id } });\r\n      fs.unlink(`.${meal.imageUrl}`, err => {\r\n        if (err) throw new Error(err.message);\r\n      });\r\n      await meal.destroy();\r\n      return res.status(200).json({\r\n        status: \"success\",\r\n        message: \"Meal Option Deleted\"\r\n      });\r\n    } catch (err) {\r\n      return res.status(500).json({\r\n        status: \"error\",\r\n        message: err.message\r\n      });\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n\r\n\r\nexport default MealControllers;\r\n"],"file":"mealControllers.js"}