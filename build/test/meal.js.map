{"version":3,"sources":["../../server/src/test/meal.js"],"names":["assert","chai","expect","use","chaiHTTP","API_PREFIX","catererPayload","name","email","phone","catering_service","password","caterer2Payload","caterer3Payload","before","done","Caterer","create","then","describe","it","request","app","get","res","to","have","status","equal","body","catch","err","console","log","message","findOne","where","caterer","id","token","jwt","sign","isCaterer","secret","expiresIn","set"],"mappings":"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","sourcesContent":["import fs from \"fs\";\r\nimport path from \"path\";\r\nimport chai from \"chai\";\r\nimport chaiHTTP from \"chai-http\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport app from \"../app\";\r\nimport secret from \"../db/jwt_secret\";\r\nimport Caterer from \"../db/models/caterer\";\r\nimport Meal from \"../db/models/meals\";\r\n\r\nconst { assert, expect, use } = chai;\r\n\r\nuse(chaiHTTP);\r\n\r\nconst API_PREFIX = \"/api/v1\";\r\n\r\n\r\nconst catererPayload = {\r\n  name: \"Billy Newton\",\r\n  email: \"em@gd.com\",\r\n  phone: \"07075748392\",\r\n  catering_service: \"Buy Food\",\r\n  password: \"billions\"\r\n};\r\n\r\nconst caterer2Payload = {\r\n  name: \"Billy Newton\",\r\n  email: \"deakueem@gdyeyw.com\",\r\n  phone: \"07075748392\",\r\n  catering_service: \"Buy Food\",\r\n  password: \"billions\"\r\n};\r\n\r\nconst caterer3Payload = {\r\n  name: \"Billy Newton\",\r\n  email: \"de@gdye.com\",\r\n  phone: \"07075748392\",\r\n  catering_service: \"Buy Food\",\r\n  password: \"billions\"\r\n};\r\n\r\nbefore(done => {\r\n  Caterer.create(catererPayload).then(() => {\r\n    done();\r\n  });\r\n});\r\n\r\ndescribe(\"Caterer Get all Meals Endpoint Tests\", () => {\r\n  it(`GET ${API_PREFIX}/meals/ - Fetch All Meals (Unauthorized)`, done => {\r\n    chai\r\n      .request(app)\r\n      .get(`${API_PREFIX}/meals/`)\r\n      .then(res => {\r\n        expect(res).to.have.status(401);\r\n        assert.equal(res.body.status, \"error\");\r\n        done();\r\n      })\r\n      .catch(err => console.log(\"GET /meals/\", err.message));\r\n  });\r\n  it(`GET ${API_PREFIX}/meals/ - Fetch All Meals - (Caterer Authorized)`, done => {\r\n    Caterer.findOne({ where: { email: catererPayload.email } })\r\n      .then(caterer => {\r\n        const { id, name, email, } = caterer;\r\n        const token = jwt.sign(\r\n          {\r\n            caterer: { id, name, email, },\r\n            isCaterer: true\r\n          },\r\n          secret,\r\n          {\r\n            expiresIn: 86400\r\n          }\r\n        );\r\n        chai\r\n          .request(app)\r\n          .get(`${API_PREFIX}/meals/`)\r\n          .set(\"Authorization\", `Bearer ${token}`)\r\n          .then(res => {\r\n            expect(res).to.have.status(200);\r\n            assert.equal(res.body.status, \"success\");\r\n            done();\r\n          })\r\n          .catch(err => console.log(\"GET /meals/\", err.message));\r\n      })\r\n      .catch(err => console.log(err.message));\r\n  });\r\n});\r\n"],"file":"meal.js"}